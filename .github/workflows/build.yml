name: Build and Release libs for Termux

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
    - name: "Clone Repository"
      run: |
        git clone https://github.com/moio9/termux-lib-builder

    - name: "Environment Preparation"
      run: |
        sudo apt update
        sudo apt install -y python3 python3-pip cmake wget git p7zip build-essential pkg-config xmlto fop xsltproc llvm autoconf libxml-parser-perl bison flex glslang-tools
        pip3 install mako meson ninja docutils StrEnum
        sudo ln -sf ~/.local/bin/meson /usr/bin/meson

    - name: "Setup Basic Android (x86_64) Runtime Environment"
      run: |
        git clone https://github.com/termux/termux-docker.git
        sudo cp -rf termux-docker/system/x86 /system
        sudo chown -R $(whoami):$(whoami) /system
        sudo chmod 755 -R /system

    - name: "Download Latest Release Package Cache"
      run: |
        cd termux-lib-builder
        curl -LO# https://github.com/moio9/termux-lib-builder/releases/download/$(curl -s https://api.github.com/repos/moio9/termux-lib-builder/releases | grep tag_name -m 1 | cut -d ":" -f 2 | sed "s/\"//g" | sed "s/,//g" | sed "s/ //g")/packages-cache.tar.gz || true
        tar -xzf packages-cache.tar.gz -C built-pkgs || true

    # - name: "Start Building (x86_64)"
    #   run: |
    #     cd termux-lib-builder
    #     ./build-all.sh x86_64 --ci
    #     cd logs
    #     7z a /home/runner/MiceWine-RootFS-x86_64-Logs.zip

    # - name: "Create RootFS File (x86_64)"
    #   run: |
    #     cd termux-lib-builder
    #     ./create-rootfs.sh x86_64
    #     mv "MiceWine-RootFS-($(git rev-parse --short HEAD))-x86_64.rat" /home/runner/MiceWine-RootFS-x86_64.rat

    # - name: "Clean (x86_64) RootFS"
    #   run: |
    #     cd termux-lib-builder
    #     sudo rm -rf /data/data/com.termux/files/usr workdir rootfs

    - name: "Start Building (aarch64)"
      run: |
        cd termux-lib-builder
        ./build-all.sh aarch64 --ci
        tar -czf /home/runner/build-logs-aarch64.tar.gz -C logs .
    
    - name: "Cache Built Libraries"
      run: |
        cd termux-lib-builder
        tar -czf /home/runner/packages-cache.tar.gz -C built-pkgs .
    
    - name: "Convert Built Packages to .deb (aarch64)"
      run: |
        chmod +x termux-lib-builder/generate-debs.sh
        cd termux-lib-builder
        ./generate-debs.sh aarch64
    
    - name: "Archive .deb Packages (.tar.gz)"
      run: |
        cd termux-lib-builder
        tar -czf /home/runner/termux-debs-aarch64.tar.gz -C debs .
    
    - name: "Get Short SHA"
      run: |
        cd termux-lib-builder
        echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
    
    - name: "Create Release with .debs"
      uses: softprops/action-gh-release@v2
      with:
        name: "Termux DEBs (${{ env.SHORT_SHA }})"
        tag_name: ${{ env.SHORT_SHA }}
        prerelease: true
        files: |
            /home/runner/termux-debs-aarch64.tar.gz
            /home/runner/packages-cache.tar.gz
            /home/runner/build-logs-aarch64.tar.gz

